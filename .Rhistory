library(odbc)
library(sqldf)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
sqldf('SELECT STATION_CODE, DATE, RAIN, SNOW, ICE, TSTORM_POP FROM adc_forecast.dbo.vw_DayNight WHERE DATE = min(DATE) ORDER BY STATION_CODE ASC')
#Connect to Forecasted UFDB DB
library(odbc)
library(sqldf)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
sqldf('SELECT STATION_CODE, DATE, RAIN, SNOW, ICE, TSTORM_POP FROM "adc_forecast.dbo.vw_DayNight" WHERE DATE = min(DATE) ORDER BY STATION_CODE ASC')
#Connect to Forecasted UFDB DB
library(odbc)
library(sqldf)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
sqldf('SELECT STATION_CODE, DATE, RAIN, SNOW, ICE, TSTORM_POP FROM con WHERE DATE = min(DATE) ORDER BY STATION_CODE ASC')
#Connect to Forecasted UFDB DB
library(odbc)
library(sqldf)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
sqldf('SELECT STATION_CODE, DATE, DAY_FLAG, RAIN, SNOW, ICE, TSTORM_POP FROM * WHERE DAY_FLAG="D" AND DATE = min(DATE) ORDER BY STATION_CODE ASC')
#Connect to Forecasted UFDB DB
library(odbc)
library(sqldf)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
sqldf('SELECT STATION_CODE, DATE, DAY_FLAG, RAIN, SNOW, ICE, TSTORM_POP FROM [adc_forecast].[dbo].[vw_DayNight] WHERE DAY_FLAG="D" AND DATE = min(DATE) ORDER BY STATION_CODE ASC')
#Connect to Forecasted UFDB DB
library(odbc)
library(sqldf)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
sqldf('SELECT STATION_CODE, DATE, DAY_FLAG, RAIN, SNOW, ICE, TSTORM_POP FROM [adc_forecast][dbo][vw_DayNight] WHERE DAY_FLAG="D" AND DATE = min(DATE) ORDER BY STATION_CODE ASC')
#Connect to Forecasted UFDB DB
library(odbc)
library(sqldf)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
sqldf('SELECT STATION_CODE, DATE, DAY_FLAG, RAIN, SNOW, ICE, TSTORM_POP FROM adc_forecastdbovw_DayNight WHERE DAY_FLAG="D" AND DATE = min(DATE) ORDER BY STATION_CODE ASC')
#Connect to Forecasted UFDB DB
library(odbc)
library(sqldf)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
sqldf('SELECT STATION_CODE, DATE, DAY_FLAG, RAIN, SNOW, ICE, TSTORM_POP FROM "adc_forecast"."dbo"."vw_DayNight" WHERE DAY_FLAG="D" AND DATE = min(DATE) ORDER BY STATION_CODE ASC')
#Connect to Forecasted UFDB DB
library(odbc)
library(DBI)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
dbGetQuery(con,'
select "STATION_CODE", "DATE", "DAY_FLAG", "RAIN", "SNOW", "ICE","TSTORM_POP",
from "vw_DayNight"
where "DAY_FLAG" ="D"
')
#Connect to Forecasted UFDB DB
library(odbc)
library(DBI)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
dbGetQuery(con,'
select "STATION_CODE", "DATE", "DAY_FLAG", "RAIN", "SNOW", "ICE","TSTORM_POP",
from ("vw_DayNight")
where "DAY_FLAG" ="D"
')
#Connect to Forecasted UFDB DB
library(odbc)
library(DBI)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
dbGetQuery(con,'
select "STATION_CODE", "DATE", "DAY_FLAG", "RAIN", "SNOW", "ICE","TSTORM_POP",
from ("adc_forecast"."dbo"."vw_DayNight")
where "DAY_FLAG" ="D"
')
#Connect to Forecasted UFDB DB
library(odbc)
library(DBI)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
dbGetQuery(con,'
select "STATION_CODE", "DATE", "DAY_FLAG", "RAIN", "SNOW", "ICE","TSTORM_POP",
from ("adc_forecast.dbo.vw_DayNight")
where "DAY_FLAG" ="D"
')
#Connect to Forecasted UFDB DB
library(odbc)
library(DBI)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
dbListTables(con)
#Connect to Forecasted UFDB DB
library(odbc)
library(DBI)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
dbListTables(con)
#"vw_DayNight"
dbListFields(con,"vw_DayNight")
install.packages("dplyr")
#Connect to Forecasted UFDB DB
library(odbc)
library(DBI)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
dbListTables(con)
#"vw_DayNight", 56
dbListFields(con,"vw_DayNight")
#STATION_CODE, DATE, DAY_FLAG, RAIN, SNOW, ICE, TSTORM_POP
library(dplyr)
tbl(con, "vw_DayNight") %>%
select(STATION_CODE, DATE, DAY_FLAG, RAIN, SNOW, ICE, TSTORM_POP)
#Connect to Forecasted UFDB DB
library(odbc)
library(DBI)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
dbListTables(con)
#"vw_DayNight", 56
dbListFields(con,"vw_DayNight")
#STATION_CODE, DATE, DAY_FLAG, RAIN, SNOW, ICE, TSTORM_POP
library(dplyr)
tbl(con, "vw_DayNight") %>%
select(STATION_CODE, DATE, DAY_FLAG, RAIN, SNOW, ICE, TSTORM_POP)
install.packages("dbplyr")
#Connect to Forecasted UFDB DB
library(odbc)
library(DBI)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
dbListTables(con)
#"vw_DayNight", 56
dbListFields(con,"vw_DayNight")
#STATION_CODE, DATE, DAY_FLAG, RAIN, SNOW, ICE, TSTORM_POP
library(dplyr)
library(dbplyr)
tbl(con, "vw_DayNight") %>%
select(STATION_CODE, DATE, DAY_FLAG, RAIN, SNOW, ICE, TSTORM_POP)
filter(DAY_FLAG = D)
#Connect to Forecasted UFDB DB
library(odbc)
library(DBI)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
#Connect to Forecasted UFDB DB
library(odbc)
library(DBI)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
#Connect to Forecasted UFDB DB
library(odbc)
library(DBI)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
library(odbc)
con <- dbConnect(odbc(), Driver = "SQL Server", Server = "widgetsql-03.accu.accuwx.com",
Database = "adc_forecast", UID = "AES_DataReader", PWD = "AES_DataR3ad3r!")
#library(maptools)
library(maps)
library(mapproj)
library(sp)
library(rgdal)
library(ggplot2)
#Get Extent Shapefile
myDIR <- "C:/ArcGIS/TempSpace.gdb"
extentFILE <- readOGR(myDIR, "NA_Extent")
class(extentFILE)
mode(extentFILE)
length(extentFILE)
#Construct as a DataFrame
extentDF <- fortify(extentFILE)
class(extentDF)
dim(extentDF)
#Map Extent
names(extentDF)
ggplot(data = extentDF, aes(x=long,y=lat, group=group)) + geom_path() + coord_map("mercator")
#Connect to Forecasted UFDB DB
library(odbc)
library(DBI)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
#Connect to Forecasted UFDB DB
library(odbc)
library(DBI)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
#Connect to Forecasted UFDB DB
library(odbc)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
#Connect to Forecasted UFDB DB
install.packages("odbc")
install.packages("DBI")
library(odbc)
library(DBI)
install.packages("odbc")
library(odbc)
library(DBI)
#Connect to Forecasted UFDB DB
library(odbc)
library(DBI)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
library(odbc)
con <- dbConnect(odbc(), Driver = "SQL Server", Server = "widgetsql-03.accu.accuwx.com", Database = "adc_forecast", UID = "AES_DataReader", PWD = "AES_DataR3ad3r!")
#Connect to Forecasted UFDB DB
library(odbc)
library(DBI)
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
#Connect to Forecasted UFDB DB
library(odbc)
file.edit("~/Desktop/foo/.Rprofile")
# This opens up a script window, within which you can enter in your library commands
library(maps)
file.edit("C:/R/Project/UFDB/.Rprofile")
# This opens up a script window, within which you can enter in your library commands
install.packages("maps")
install.packages("mapproj")
install.packages("sp")
install.packages("rgdal")
install.packages("ggplot2")
install.packages("odbc")
install.packages("DBI")
install.packages("dplyr")
install.packages("dbplyr")
library(maps)
library(mapproj)
library(sp)
library(rgdal)
library(ggplot2)
library(odbc)
library(DBI)
library(dplyr)
library(dbplyr)
#Get Extent Shapefile
myDIR <- "C:/ArcGIS/TempSpace.gdb"
extentFILE <- readOGR(myDIR, "NA_Extent")
class(extentFILE)
mode(extentFILE)
length(extentFILE)
#Construct as a DataFrame
extentDF <- fortify(extentFILE)
class(extentDF)
dim(extentDF)
#Map Extent
names(extentDF)
ggplot(data = extentDF, aes(x=long,y=lat, group=group)) + geom_path() + coord_map("mercator")
#Connect to Forecasted UFDB DB
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
dbListTables(con)
#"vw_DayNight", 56
dbListFields(con,"vw_DayNight")
#STATION_CODE, DATE, DAY_FLAG, RAIN, SNOW, ICE, TSTORM_POP
#Create table in SQL Server database; a local temporary.
dbExecute(con,"Select 'STATION_CODE', 'DATE', 'DAY_FLAG', 'RAIN', 'SNOW', 'ICE', 'TSTORM_POP'")
file.edit("C:/R/Project/UFDB/.Rprofile")
# This opens up a script window, within which you can enter in your library commands
install.packages("maps")
install.packages("mapproj")
install.packages("sp")
install.packages("rgdal")
install.packages("ggplot2")
install.packages("odbc")
install.packages("DBI")
install.packages("dplyr")
install.packages("dbplyr")
library(maps)
library(mapproj)
library(sp)
library(rgdal)
library(ggplot2)
library(odbc)
library(DBI)
library(dplyr)
library(dbplyr)
#Get Extent Shapefile
myDIR <- "C:/ArcGIS/TempSpace.gdb"
extentFILE <- readOGR(myDIR, "NA_Extent")
class(extentFILE)
mode(extentFILE)
length(extentFILE)
#Construct as a DataFrame
extentDF <- fortify(extentFILE)
class(extentDF)
dim(extentDF)
#Map Extent
names(extentDF)
ggplot(data = extentDF, aes(x=long,y=lat, group=group)) + geom_path() + coord_map("mercator")
#Connect to Forecasted UFDB DB
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
## Default repo
local({r <- getOption("repos")
r["CRAN"] <- "https://cloud.r-project.org"
options(repos=r)
})
file.edit("C:/R/Project/UFDB/.Rprofile")
# This opens up a script window, within which you can enter in your library commands
install.packages("maps")
install.packages("mapproj")
install.packages("sp")
install.packages("rgdal")
install.packages("ggplot2")
install.packages("odbc")
install.packages("DBI")
install.packages("dplyr")
install.packages("dbplyr")
library(maps)
library(mapproj)
library(sp)
library(rgdal)
library(ggplot2)
library(odbc)
library(DBI)
library(dplyr)
library(dbplyr)
#Get Extent Shapefile
myDIR <- "C:/ArcGIS/TempSpace.gdb"
extentFILE <- readOGR(myDIR, "NA_Extent")
class(extentFILE)
mode(extentFILE)
length(extentFILE)
#Construct as a DataFrame
extentDF <- fortify(extentFILE)
class(extentDF)
dim(extentDF)
#Construct as a DataFrame
extentDF <- fortify(extentFILE)
class(extentDF)
dim(extentDF)rary(odbc)
library(DBI)
library(dplyr)
library(dbplyr)
## Default repo
local({r <- getOption("repos")
r["CRAN"] <- "https://cloud.r-project.org"
options(repos=r)
})
file.edit("C:/R/Project/UFDB/.Rprofile")
# This opens up a script window, within which you can enter in your library commands
install.packages("maps")
install.packages("mapproj")
install.packages("sp")
install.packages("rgdal")
install.packages("ggplot2")
install.packages("odbc")
install.packages("DBI")
install.packages("dplyr")
install.packages("dbplyr")
library(maps)
library(mapproj)
library(sp)
library(rgdal)
library(ggplot2)
library(odbc)
library(DBI)
library(dplyr)
library(dbplyr)
#Get Extent Shapefile
myDIR <- "C:/ArcGIS/TempSpace.gdb"
extentFILE <- readOGR(myDIR, "NA_Extent")
install.packages("maps")
#Map Extent
names(extentDF)
ggplot(data = extentDF, aes(x=long,y=lat, group=group)) + geom_path() + coord_map("mercator")
#Connect to Forecasted UFDB DB
odbc::odbcListDrivers()
con <- dbConnect(odbc(),
Driver="SQL Server",
Server="widgetsql-03.accu.accuwx.com",
Database="adc_forecast",
UID="AES_DataReader",
PWD="AES_DataR3ad3r!")
